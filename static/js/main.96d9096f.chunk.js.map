{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleSubmit","event","preventDefault","props","addMovie","setState","handleChange","name","target","value","prevState","onSubmit","this","onChange","required","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCtBGK,G,MAAb,4MACEC,MAAQ,CACNJ,MAAO,CACLZ,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAPd,EAWEG,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKL,MAAMJ,OAC/B,EAAKU,SAAS,CACZV,MAAO,CACLZ,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OApBhB,EAyBES,aAAe,SAACL,GAAW,IACjBM,EAASN,EAAMO,OAAfD,KACAE,EAAUR,EAAMO,OAAhBC,MAER,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAC1Bf,MAAM,2BACDe,EAAUf,OADV,kBAEFY,EAAOE,SAhChB,uDAqCY,IAAD,OACP,OACE,0BAAMtB,UAAU,OAAOwB,SAAU,SAAAV,GAAK,OAAI,EAAKD,aAAaC,KAC1D,+BACE,qCACA,2BACEd,UAAU,QACVoB,KAAK,QACLE,MAAOG,KAAKb,MAAMJ,MAAMZ,MACxB8B,SAAUD,KAAKN,aACfQ,UAAQ,KAGZ,+BACE,2CACA,2BACE3B,UAAU,QACVoB,KAAK,cACLE,MAAOG,KAAKb,MAAMJ,MAAMX,YACxB6B,SAAUD,KAAKN,gBAGnB,+BACE,sCACA,2BACEnB,UAAU,QACVoB,KAAK,SACLE,MAAOG,KAAKb,MAAMJ,MAAMV,OACxB4B,SAAUD,KAAKN,aACfQ,UAAQ,KAGZ,+BACE,uCACA,2BACE3B,UAAU,QACVoB,KAAK,UACLE,MAAOG,KAAKb,MAAMJ,MAAMT,QACxB2B,SAAUD,KAAKN,aACfQ,UAAQ,KAGZ,+BACE,sCACA,2BACE3B,UAAU,QACVoB,KAAK,SACLE,MAAOG,KAAKb,MAAMJ,MAAME,OACxBgB,SAAUD,KAAKN,aACfQ,UAAQ,KAGZ,4BACE3B,UAAU,SACV4B,KAAK,UAFP,YAzFR,GAA8BC,c,OCEjBC,EAAb,4MACElB,MAAQ,CACNN,OAAQyB,GAFZ,EAKEd,SAAW,SAACT,GACV,EAAKU,UAAS,SAACK,GACb,MAAO,CAAEjB,OAAO,GAAD,mBAAMiB,EAAUjB,QAAhB,CAAwBE,SAP7C,uDAWY,IACAF,EAAWmB,KAAKb,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUiB,SAAUQ,KAAKR,iBApBnC,GAAyBY,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.96d9096f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie(this.state.movie);\n    this.setState({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  handleChange = (event) => {\n    const { name } = event.target;\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      movie: {\n        ...prevState.movie,\n        [name]: value,\n      },\n    }));\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={event => this.handleSubmit(event)}>\n        <label>\n          <h2>Title</h2>\n          <input\n            className=\"input\"\n            name=\"title\"\n            value={this.state.movie.title}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          <h2>Description</h2>\n          <input\n            className=\"input\"\n            name=\"description\"\n            value={this.state.movie.description}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <h2>imgUrl</h2>\n          <input\n            className=\"input\"\n            name=\"imgUrl\"\n            value={this.state.movie.imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          <h2>imdbUrl</h2>\n          <input\n            className=\"input\"\n            name=\"imdbUrl\"\n            value={this.state.movie.imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label>\n          <h2>imdbId</h2>\n          <input\n            className=\"input\"\n            name=\"imdbId\"\n            value={this.state.movie.imdbId}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      return { movies: [...prevState.movies, movie] };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}